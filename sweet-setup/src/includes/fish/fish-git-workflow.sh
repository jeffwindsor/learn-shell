# generated by src/generate-includes.sh

function install.fish-git-workflow(){
  echo -e "function gpush
  git push
end" > ${fish_function_path}/gpush.fish
  echo -e "function gpull
  git pull --rebase --prune git submodule update --init --recursive
end" > ${fish_function_path}/gpull.fish
  echo -e "function gundo
  git reset HEAD~1 --mixed
end" > ${fish_function_path}/gundo.fish
  echo -e "function greset
  git add -A
  git commit -qm 'CLEAN POINT'
  git reset HEAD~1 --hard
  git clean -f -d
end" > ${fish_function_path}/greset.fish
  echo -e "function ginit
  git init
  gi osx >> .gitignore
  echo \"READ.ME\" >> README.md
  gcommit \"Initial\"
  if test -n \$argv
    gconnect \$repo_uri
    git push -u origin master
  end
end" > ${fish_function_path}/ginit.fish
  echo -e "function gconnect
  git remote add origin \$argv
  git remote -v
end" > ${fish_function_path}/gconnect.fish
  echo -e "function gbranch
  git checkout -b \$argv
end" > ${fish_function_path}/gbranch.fish
  echo -e "function gcommit
  git add -A
  if test -n \"\$argv\"
        git commit -m \"\$argv\"
    else
        git commit -m \"WIP\"
    end
end" > ${fish_function_path}/gcommit.fish
  echo -e "function gmerge
  set merge_branch (git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
  git checkout master
  gpull
  git rebase -i master
  git merge \$merge_branch
end" > ${fish_function_path}/gmerge.fish
  echo -e "function gtrack
  git checkout --track origin/
end" > ${fish_function_path}/gtrack.fish
}
